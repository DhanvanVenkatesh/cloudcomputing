INSTRUCTIONS

GITHUB: https://github.com/DhanvanVenkatesh/cloud_lab


ex-2
SOAP
File>dynamic web project or Java DEE> create> RC project new package> RC new interface> RC new class
>RC webservice> scrollbar up(full)>next-next>launch.

RESTFul
run code index.js> node index.js> 
postman> body > www. encoded

	POST localhost:3000/insert
	GET localhost:3000/
	PUT localhost:3000/update/2
	DELETE localhost:3000/del/2


*****CAN SHOW MONGODB EXP FOR REST ALSO*****
------------------------------------------------------
ex-3
FIREBASE

Realtime DB
files: firebaseConfig.js > copy paste from project settings (after npm install firebase)
	crud.js > remember one fucntion rest same
     		.set >CREATE
		.on> READ
		.update> UPDATE
		.remove> DELETE
        index.html > include 4 filed id and 3 buttons , include firebase script src.

Authentication, Storage, Firestore => follow FIREBASE 3 in 1 TAB.

------------------------------------------------------
ex-4
AUTH 0

files: index.html (inside script)
//window.location.href = "https://YOUR_DOMAIN.auth0.com/authorize?audience=YOUR_API_AUDIENCE&response_type=code&client_id=YOUR_CLIENT_ID&redirect_uri=REDIRECT_URI&scope=openid%20profile%20email";
       home.html (Basic page)

Auth0 website
Application>create app> single page app> .....> (subsitute the respective data in the above href link)
redirect uri (127.0.0.1:5500/home.html)
allowed callback url, allowed logout

login uri (127.0.0.1:5500/index.html)
allowed web origins


API>create api>name , https://something.com
-------------------------------------------------------

ex-5
MONGODB
Follow MONGODB Inst

go to atlas> terminate any cluster> create> free plan> give name,pass>create user> add IP 0.0.0.0/0> finish> click connect - copy db url
terminal- node index.js

localhost:8000 (insert)
localhost:8000/edit/abc2@gmail.com (update)
localhost:8000/delete/abc@gmail.com (delete)

reload for data display.


DROPBOX

files: dropbox.html
	change data-app-key , ACCESS_TOKEN

dropbox.com/developers>>
>App console> create app> permissions (give all permission till OPEN ID SCOPES section)> settings ..... copy data-app-key & ACCESS_TOKEN, add (127.0.0.1) and (localhost) in choose domain section

-------------------------------------------------------
ex-6
COLD MIGRATION 
RC VM > take> snapshotname> 
file > export appliance >vmfromsnap (remember location)>next>export
.ova file generated


file>import>select

--------------------------------------------------------
ex-7
XEN 
create 2 server if not exist
RC server1 > set OS> give name(regno)> set osi for OS>next-next>create
RC VM(Regno)>Move VM> select server 2>click move> vm moved

Output verification done in ADMIN SERVER MACHINE (Creation of VM)

----------------------------------------------------------

ex-8
KVM Installation
Study CMDS , some lines code

---------------------------------------------------------

ex-10
CLOUDSIM
https://github.com/Cloudslab/cloudsim/releases/tag/cloudsim-3.0.3
eclipse IDE>new project>java project> name, check out use default >chose unzipped cloudsim 3.0.3 folder> next-next

run sample/ modify sample acc to qs and run
examples:
1: 1user 1 dc 1vm
2: 1user 1dc 2vm same mips
3: 1user 1dc 2vm diff mips
4: 1user 2dc 2vm
5: 2user 2dc 2vm
6: scalable sys 20vms 40cloudlets
7: pause/resume simulation(threads) 5vm 10cloudlets
8: globalbroker entity in run-time
---------------------------------------------------------

ex-11
CLOUD ANALYST
https://drive.google.com/drive/folders/1dVTXx9ycdVPfTvrCRgmhhXWffkLoHsXk?usp=sharing

Netbeans> open project (3rd icon) > select unzipped cloudanalyst folder> run button
1. configure Datacentre 
2. configure Userbase and DC count
3. Advance settings> RR algo/throtlled etc.

Run simulation
Show O/P
__________________________________________________________
